Index: backend/classification_pipline.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import serial\r\nimport numpy as np\r\nfrom joblib import load\r\n\r\nNUM_SENSORS = 8\r\nCLASSIFIER_FILE = \"../classifier/logistic_regression_model.pkl\"\r\n\r\nclf = load(CLASSIFIER_FILE)\r\nprint(clf)\r\nser = serial.Serial('COM29', 9600)\r\nser.flushInput()\r\n\r\n\r\ndef read_data(baseline):\r\n    posture_data = []\r\n    while len(posture_data) != NUM_SENSORS:\r\n        ser.flushInput()\r\n        posture_data = np.array(ser.readline() \\\r\n                                .decode(). \\\r\n                                strip(). \\\r\n                                split(',')). \\\r\n            astype(int)\r\n\r\n    return posture_data\r\n\r\ndef classify_posture(clf, posture_data):\r\n    prediction = clf.predict(posture_data)\r\n    return prediction\r\n\r\n\r\ndef calibrate():\r\n    data = []\r\n    for i in range(0, 100):\r\n        row = np.array(ser.readline() \\\r\n                       .decode(). \\\r\n                       strip(). \\\r\n                       split(',')). \\\r\n            astype(int)\r\n        if len(row) == NUM_SENSORS:\r\n            data.append(row)\r\n\r\n    temp = data[3:]\r\n    baseline = np.mean(temp, axis=0)\r\n    print(baseline)\r\n    return baseline\r\n\r\n\r\nbaseline = calibrate()\r\n\r\nif __name__==\"__main__\":\r\n    while True:\r\n        # TODO: Auto-Calibration?\r\n        # Sleep for some time to put delay between each read?\r\n        posture_data = read_data(baseline)\r\n        posture = classify_posture(posture_data)\r\n        # Process posture (notification and storage)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- backend/classification_pipline.py	(revision aab8f31a0baf0adab438be53cc69bf9866ffac94)
+++ backend/classification_pipline.py	(date 1607896771361)
@@ -23,6 +23,7 @@
 
     return posture_data
 
+
 def classify_posture(clf, posture_data):
     prediction = clf.predict(posture_data)
     return prediction
@@ -47,7 +48,7 @@
 
 baseline = calibrate()
 
-if __name__=="__main__":
+if __name__ == "__main__":
     while True:
         # TODO: Auto-Calibration?
         # Sleep for some time to put delay between each read?
Index: classifier/demonstration.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- classifier/demonstration.py	(date 1607896917018)
+++ classifier/demonstration.py	(date 1607896917018)
@@ -0,0 +1,17 @@
+import joblib
+from classification_pipline import classify_posture, read_data
+import os
+
+CLASSIFIER_FILE = ""
+
+classifier = joblib.load(CLASSIFIER_FILE)
+
+prev_posture = ""
+while True:
+    posture_data = read_data()
+    classification = classify_posture(classifier, posture_data)
+
+    if prev_posture != classification:
+        os.system('cls')
+        print(classification)
+        prev_posture = classification
\ No newline at end of file
